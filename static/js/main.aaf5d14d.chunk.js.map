{"version":3,"sources":["App.js","reportWebVitals.js","LinePlot.js","index.js"],"names":["App","props","findQuintile","Year","HPIData","i","HPI","length","Quarter","push","sort","a","b","lowest","highest","Quintiles","size","firstIndex","Math","floor","secondIndex","thirdIndex","fourthIndex","first","second","third","fourth","findColor","HPIValue","mapHandler","event","name","target","dataset","state","State","message","alert","statesCustomConfig","console","log","states","element","color","fill","changeMap","year","rangeInput","document","getElementById","value","parseInt","innerHTML","quintiles","dashString","twentyLow","toString","twentyHigh","twentyStr","concat","fourtyLow","fourtyHigh","fourtyStr","sixtyLow","sixtyHigh","sixtyStr","eightyLow","eightyHigh","eightyStr","oneHundoLow","oneHundoHigh","oneHundoStr","setState","inputString","id","type","min","max","defaultValue","step","onChange","className","customize","this","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LinePlot","updateState","getPlot","lineData","time","Time","data","ResponsiveContainer","width","aspect","LineChart","margin","right","XAxis","dataKey","interval","YAxis","Tooltip","Line","stroke","activeDot","r","dot","React","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aaf5d14d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\"; /* optional for styling like the :hover pseudo-class */\r\nimport USAMap from \"react-usa-map\";\r\nimport HPI from \"./HPI.json\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { Year: 1975 };\r\n    }\r\n    findQuintile = (Year) => {\r\n        const HPIData = [];\r\n        for (let i = 0; i < HPI.length; i++) {\r\n            if (HPI[i].Year === Year && HPI[i].Quarter === 1) {\r\n                HPIData.push(HPI[i].HPI);\r\n            }\r\n        }\r\n        HPIData.sort(function (a, b) {\r\n            return a - b;\r\n        });\r\n        var lowest = HPIData[1];\r\n        var highest = HPIData[HPIData.length - 1];\r\n        const Quintiles = [];\r\n        var size = HPIData.length;\r\n        var firstIndex = Math.floor(0.2 * (size + 1));\r\n        var secondIndex = Math.floor(0.4 * (size + 1));\r\n        var thirdIndex = Math.floor(0.6 * (size + 1));\r\n        var fourthIndex = Math.floor(0.8 * (size + 1));\r\n\r\n        var first = HPIData[firstIndex];\r\n        var second = HPIData[secondIndex];\r\n        var third = HPIData[thirdIndex];\r\n        var fourth = HPIData[fourthIndex];\r\n\r\n        Quintiles[0] = first;\r\n        Quintiles[1] = second;\r\n        Quintiles[2] = third;\r\n        Quintiles[3] = fourth;\r\n        Quintiles[4] = lowest;\r\n        Quintiles[5] = highest;\r\n        return Quintiles;\r\n    };\r\n\r\n    findColor = (Quintiles, HPIValue) => {\r\n        var color = \"\";\r\n        if (HPIValue < Quintiles[0]) {\r\n            color = \"#D6E0E8\";\r\n        } else if (HPIValue < Quintiles[1]) {\r\n            color = \"#A3BACB\";\r\n        } else if (HPIValue < Quintiles[2]) {\r\n            color = \"#6E91AD\";\r\n        } else if (HPIValue < Quintiles[3]) {\r\n            color = \"#38688F\";\r\n        } else {\r\n            color = \"#003D6F\";\r\n        }\r\n\r\n        return color;\r\n    };\r\n\r\n    /* mandatory */\r\n    mapHandler = (event) => {\r\n        var name = event.target.dataset.name;\r\n        if (name !== \"DC\") {\r\n            for (let i = 0; i < HPI.length; i++) {\r\n                if (HPI[i].Year === this.state.Year && HPI[i].State === name) {\r\n                    var message =\r\n                        \"The HPI for \" +\r\n                        name +\r\n                        \" in the year \" +\r\n                        this.state.Year +\r\n                        \" is: \" +\r\n                        HPI[i].HPI;\r\n                    alert(message);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        //alert(event.target.dataset.name);\r\n    };\r\n\r\n    /* optional customization of filling per state and calling custom callbacks per state */\r\n    statesCustomConfig = (Year, Quarter) => {\r\n        //alert(HPI[0].State);\r\n        console.log(\"SCC called with: \" + Year);\r\n        const states = {};\r\n        var Quintiles = this.findQuintile(Year);\r\n\r\n        for (let i = 0; i < HPI.length; i++) {\r\n            if (HPI[i].Quarter === Quarter && HPI[i].Year === Year) {\r\n                var element = {};\r\n                var color = this.findColor(Quintiles, HPI[i].HPI);\r\n                element.fill = color;\r\n                states[HPI[i].State] = element;\r\n            }\r\n        }\r\n        return states;\r\n        /*NJ: {\r\n                fill: \"navy\",\r\n                clickHandler: (event) =>\r\n                    console.log(\"Custom handler for NJ\", event.target.dataset),\r\n            },\r\n            NY: {\r\n                fill: \"#CC0000\",\r\n            },\r\n            */\r\n    };\r\n\r\n    changeMap = () => {\r\n        console.log(\"in changeMap\");\r\n        var year = 1975;\r\n        var rangeInput = document.getElementById(\"rangeInput\");\r\n        if (rangeInput != null) {\r\n            year = rangeInput.value;\r\n            year = parseInt(year);\r\n        }\r\n        document.getElementById(\"currentYear\").innerHTML = year;\r\n        var quintiles = this.findQuintile(year);\r\n        let dashString = \"-\";\r\n\r\n        let twentyLow = quintiles[4];\r\n        twentyLow = parseInt(twentyLow);\r\n        twentyLow = twentyLow.toString();\r\n        let twentyHigh = quintiles[0];\r\n        twentyHigh = parseInt(twentyHigh);\r\n        twentyHigh = twentyHigh.toString();\r\n        let twentyStr = twentyLow.concat(dashString);\r\n        twentyStr = twentyStr.concat(twentyHigh);\r\n        document.getElementById(\"textTwenty\").innerHTML = twentyStr;\r\n\r\n        let fourtyLow = quintiles[0];\r\n        fourtyLow = parseInt(fourtyLow) + 1;\r\n        fourtyLow = fourtyLow.toString();\r\n        let fourtyHigh = quintiles[1];\r\n        fourtyHigh = parseInt(fourtyHigh);\r\n        fourtyHigh = fourtyHigh.toString();\r\n        let fourtyStr = fourtyLow.concat(dashString);\r\n        fourtyStr = fourtyStr.concat(fourtyHigh);\r\n        document.getElementById(\"textFourty\").innerHTML = fourtyStr;\r\n\r\n        let sixtyLow = quintiles[1];\r\n        sixtyLow = parseInt(sixtyLow) + 1;\r\n        sixtyLow = sixtyLow.toString();\r\n        let sixtyHigh = quintiles[2];\r\n        sixtyHigh = parseInt(sixtyHigh);\r\n        sixtyHigh = sixtyHigh.toString();\r\n        let sixtyStr = sixtyLow.concat(dashString);\r\n        sixtyStr = sixtyStr.concat(sixtyHigh);\r\n        document.getElementById(\"textSixty\").innerHTML = sixtyStr;\r\n\r\n        let eightyLow = quintiles[2];\r\n        eightyLow = parseInt(eightyLow) + 1;\r\n        eightyLow = eightyLow.toString();\r\n        let eightyHigh = quintiles[3];\r\n        eightyHigh = parseInt(eightyHigh);\r\n        eightyHigh = eightyHigh.toString();\r\n        let eightyStr = eightyLow.concat(dashString);\r\n        eightyStr = eightyStr.concat(eightyHigh);\r\n        document.getElementById(\"textEighty\").innerHTML = eightyStr;\r\n\r\n        let oneHundoLow = quintiles[3];\r\n        oneHundoLow = parseInt(oneHundoLow) + 1;\r\n        oneHundoLow = oneHundoLow.toString();\r\n        let oneHundoHigh = quintiles[5];\r\n        oneHundoHigh = parseInt(oneHundoHigh);\r\n        oneHundoHigh = oneHundoHigh.toString();\r\n        let oneHundoStr = oneHundoLow.concat(dashString);\r\n        oneHundoStr = oneHundoStr.concat(oneHundoHigh);\r\n        document.getElementById(\"textOneHundo\").innerHTML = oneHundoStr;\r\n        this.setState({ Year: year });\r\n    };\r\n\r\n    render() {\r\n        //var input = document.getElementById(\"myInput\");\r\n        var rangeInput = document.getElementById(\"rangeInput\");\r\n        var year;\r\n        if (rangeInput === null) {\r\n            year = 1975;\r\n        } else {\r\n            var inputString = rangeInput.value;\r\n            year = parseInt(inputString);\r\n        }\r\n        return (\r\n            <div id=\"parent\">\r\n                <h1 id=\"currentYear\">1975</h1>\r\n                <input\r\n                    type=\"range\"\r\n                    min=\"1975\"\r\n                    max=\"2021\"\r\n                    defaultValue=\"1975\"\r\n                    step=\"1\"\r\n                    id=\"rangeInput\"\r\n                    onChange={() => this.changeMap()}\r\n                />\r\n                {/* <button type=\"button\" onClick={() => this.changeMap()}>submit</button> */}\r\n                <div id=\"rectangle\">\r\n                    <h2>Legend</h2>\r\n                    <div className=\"bullet\" id=\"twenty\">\r\n                        <h3 className=\"legendNum\" id=\"textTwenty\">\r\n                            0-55{\" \"}\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"bullet\" id=\"fourty\">\r\n                        <h3 className=\"legendNum\" id=\"textFourty\">\r\n                            55-62\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"bullet\" id=\"sixty\">\r\n                        <h3 className=\"legendNum\" id=\"textSixty\">\r\n                            62-66\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"bullet\" id=\"eighty\">\r\n                        <h3 className=\"legendNum\" id=\"textEighty\">\r\n                            66-70\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"bullet\" id=\"onehundo\">\r\n                        <h3 className=\"legendNum\" id=\"textOneHundo\">\r\n                            70-80\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"App\" id=\"App\">\r\n                    <USAMap\r\n                        customize={this.statesCustomConfig(year, 1)}\r\n                        onClick={this.mapHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport HPI from \"./HPI.json\";\r\nimport {\r\n    LineChart,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    Line,\r\n    XAxis,\r\n    YAxis,\r\n} from \"recharts\";\r\n\r\nclass LinePlot extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { State: \"AK\" };\r\n    }\r\n\r\n    updateState = (event) => {\r\n        this.setState({ State: event.target.value });\r\n    };\r\n\r\n    getPlot = (State) => {\r\n        let lineData = [];\r\n        for (let i = 0; i < HPI.length; i++) {\r\n            if (HPI[i].State === State) {\r\n                let time = HPI[i].Year + \" Q\" + HPI[i].Quarter;\r\n                lineData.push({ Time: time, HPI: HPI[i].HPI });\r\n            }\r\n        }\r\n        return lineData;\r\n    };\r\n\r\n    render() {\r\n        var data = this.getPlot(this.state.State);\r\n        return (\r\n            <div>\r\n                <h2>HPI Graphs By State</h2>\r\n                <select\r\n                    value={this.state.State}\r\n                    id=\"myList\"\r\n                    onChange={this.updateState}\r\n                >\r\n                    <option value=\"AK\">Alaska</option>\r\n                    <option value=\"AL\">Alabama</option>\r\n                    <option value=\"AR\">Arkansas</option>\r\n                    <option value=\"AZ\">Arizona</option>\r\n                    <option value=\"CA\">California</option>\r\n                    <option value=\"CO\">Colorado</option>\r\n                    <option value=\"CT\">Connecticut</option>\r\n                    <option value=\"DE\">Delaware</option>\r\n                    <option value=\"FL\">Florida</option>\r\n                    <option value=\"GA\">Georgia</option>\r\n                    <option value=\"HI\">Hawaii</option>\r\n                    <option value=\"IA\">Iowa</option>\r\n                    <option value=\"ID\">Idaho</option>\r\n                    <option value=\"IL\">Illinois</option>\r\n                    <option value=\"IN\">Indiana</option>\r\n                    <option value=\"KS\">Kansas</option>\r\n                    <option value=\"KY\">Kentucky</option>\r\n                    <option value=\"LA\">Louisiana</option>\r\n                    <option value=\"MA\">Massachusetts</option>\r\n                    <option value=\"MD\">Maryland</option>\r\n                    <option value=\"ME\">Maine</option>\r\n                    <option value=\"MI\">Michigan</option>\r\n                    <option value=\"MN\">Minnesota</option>\r\n                    <option value=\"MO\">Missouri</option>\r\n                    <option value=\"MS\">Mississippi</option>\r\n                    <option value=\"MT\">Montana</option>\r\n                    <option value=\"NC\">North Carolina</option>\r\n                    <option value=\"ND\">North Dakota</option>\r\n                    <option value=\"NE\">Nebraska</option>\r\n                    <option value=\"NH\">New Hampshire</option>\r\n                    <option value=\"NJ\">New Jersey</option>\r\n                    <option value=\"NM\">New Mexico</option>\r\n                    <option value=\"NV\">Nevada</option>\r\n                    <option value=\"NY\">New York</option>\r\n                    <option value=\"OH\">Ohio</option>\r\n                    <option value=\"OK\">Oklahoma</option>\r\n                    <option value=\"OR\">Oregon</option>\r\n                    <option value=\"PA\">Pennsylvania</option>\r\n                    <option value=\"RI\">Rhode Island</option>\r\n                    <option value=\"SC\">South Carolina</option>\r\n                    <option value=\"SD\">South Dakota</option>\r\n                    <option value=\"TN\">Tennessee</option>\r\n                    <option value=\"TX\">Texas</option>\r\n                    <option value=\"UT\">Utah</option>\r\n                    <option value=\"VA\">Virginia</option>\r\n                    <option value=\"VT\">Vermont</option>\r\n                    <option value=\"WA\">Washington</option>\r\n                    <option value=\"WI\">Wisconsin</option>\r\n                    <option value=\"WV\">West Virginia</option>\r\n                    <option value=\"WY\">Wyoming</option>\r\n                </select>\r\n                <ResponsiveContainer width=\"80%\" aspect={3}>\r\n                    <LineChart data={data} margin={{ right: 300 }}>\r\n                        <XAxis dataKey=\"Time\" interval={\"preserveStartEnd\"} />\r\n                        <YAxis></YAxis>\r\n                        <Tooltip />\r\n                        <Line\r\n                            dataKey=\"HPI\"\r\n                            stroke=\"red\"\r\n                            activeDot={{ r: 8 }}\r\n                            dot={false}\r\n                        />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LinePlot;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport LinePlot from \"./LinePlot\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n        <LinePlot />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}